{"ast":null,"code":"import jwtDecode from \"jwt-decode\";\nimport http from \"./httpService\";\nimport * as config from \"../config.json\";\nconst {\n  apiUrl\n} = config;\nconst apiEndpoint = apiUrl + \"users/\";\nconst tokenKey = \"token\"; //http.setJwt(getJwt());\n\nexport async function login(username, password) {\n  console.log(\"username\", username);\n  console.log(\"password\", password);\n  const {\n    data: jwt\n  } = await http.post(apiEndpoint + \"login\", {\n    username,\n    password\n  });\n  console.log(jwt);\n  localStorage.setItem(tokenKey, jwt);\n}\nexport function loginWithJwt(jwt) {\n  localStorage.setItem(tokenKey, jwt);\n}\nexport async function logout() {\n  const respond = await http.get(apiEndpoint + \"logout\");\n  console.log(respond);\n  localStorage.removeItem(tokenKey);\n}\nexport function getCurrentUser() {\n  try {\n    const jwt = localStorage.getItem(tokenKey);\n    return jwtDecode(jwt);\n  } catch (ex) {\n    console.log(ex);\n    return null;\n  }\n}\nexport function getJwt() {\n  return localStorage.getItem(tokenKey);\n}\nconst exportedMethods = {\n  login,\n  loginWithJwt,\n  logout,\n  getCurrentUser,\n  getJwt\n};\nexport default exportedMethods;","map":{"version":3,"sources":["/Users/aaryankapoor/Downloads/complete-font-back/demo-app-updated-routing/src/services/authService.js"],"names":["jwtDecode","http","config","apiUrl","apiEndpoint","tokenKey","login","username","password","console","log","data","jwt","post","localStorage","setItem","loginWithJwt","logout","respond","get","removeItem","getCurrentUser","getItem","ex","getJwt","exportedMethods"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAO,KAAKC,MAAZ,MAAwB,gBAAxB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaD,MAAnB;AACA,MAAME,WAAW,GAAGD,MAAM,GAAG,QAA7B;AACA,MAAME,QAAQ,GAAG,OAAjB,C,CAEA;;AAEA,OAAO,eAAeC,KAAf,CAAqBC,QAArB,EAA+BC,QAA/B,EAAyC;AAC9CC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,QAAxB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAxB;AACA,QAAM;AAAEG,IAAAA,IAAI,EAAEC;AAAR,MAAgB,MAAMX,IAAI,CAACY,IAAL,CAAUT,WAAW,GAAG,OAAxB,EAAiC;AAC3DG,IAAAA,QAD2D;AAE3DC,IAAAA;AAF2D,GAAjC,CAA5B;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACAE,EAAAA,YAAY,CAACC,OAAb,CAAqBV,QAArB,EAA+BO,GAA/B;AACD;AAED,OAAO,SAASI,YAAT,CAAsBJ,GAAtB,EAA2B;AAChCE,EAAAA,YAAY,CAACC,OAAb,CAAqBV,QAArB,EAA+BO,GAA/B;AACD;AAED,OAAO,eAAeK,MAAf,GAAwB;AAC7B,QAAMC,OAAO,GAAG,MAAMjB,IAAI,CAACkB,GAAL,CAASf,WAAW,GAAG,QAAvB,CAAtB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYQ,OAAZ;AACAJ,EAAAA,YAAY,CAACM,UAAb,CAAwBf,QAAxB;AACD;AAED,OAAO,SAASgB,cAAT,GAA0B;AAC/B,MAAI;AACF,UAAMT,GAAG,GAAGE,YAAY,CAACQ,OAAb,CAAqBjB,QAArB,CAAZ;AACA,WAAOL,SAAS,CAACY,GAAD,CAAhB;AACD,GAHD,CAGE,OAAOW,EAAP,EAAW;AACXd,IAAAA,OAAO,CAACC,GAAR,CAAYa,EAAZ;AACA,WAAO,IAAP;AACD;AACF;AAED,OAAO,SAASC,MAAT,GAAkB;AACvB,SAAOV,YAAY,CAACQ,OAAb,CAAqBjB,QAArB,CAAP;AACD;AACD,MAAMoB,eAAe,GAAG;AACtBnB,EAAAA,KADsB;AAEtBU,EAAAA,YAFsB;AAGtBC,EAAAA,MAHsB;AAItBI,EAAAA,cAJsB;AAKtBG,EAAAA;AALsB,CAAxB;AAOA,eAAeC,eAAf","sourcesContent":["import jwtDecode from \"jwt-decode\";\nimport http from \"./httpService\";\nimport * as config from \"../config.json\";\n\nconst { apiUrl } = config;\nconst apiEndpoint = apiUrl + \"users/\";\nconst tokenKey = \"token\";\n\n//http.setJwt(getJwt());\n\nexport async function login(username, password) {\n  console.log(\"username\", username);\n  console.log(\"password\", password);\n  const { data: jwt } = await http.post(apiEndpoint + \"login\", {\n    username,\n    password,\n  });\n  console.log(jwt);\n  localStorage.setItem(tokenKey, jwt);\n}\n\nexport function loginWithJwt(jwt) {\n  localStorage.setItem(tokenKey, jwt);\n}\n\nexport async function logout() {\n  const respond = await http.get(apiEndpoint + \"logout\");\n  console.log(respond);\n  localStorage.removeItem(tokenKey);\n}\n\nexport function getCurrentUser() {\n  try {\n    const jwt = localStorage.getItem(tokenKey);\n    return jwtDecode(jwt);\n  } catch (ex) {\n    console.log(ex);\n    return null;\n  }\n}\n\nexport function getJwt() {\n  return localStorage.getItem(tokenKey);\n}\nconst exportedMethods = {\n  login,\n  loginWithJwt,\n  logout,\n  getCurrentUser,\n  getJwt,\n};\nexport default exportedMethods;\n"]},"metadata":{},"sourceType":"module"}