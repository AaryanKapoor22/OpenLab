{"ast":null,"code":"var _jsxFileName = \"/Users/aaryankapoor/Downloads/FRONTENDFINAL/OpenLab/Frontend/src/components/loginForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport auth from \"../services/authService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    setError,\n    formState: {\n      errors,\n      isSubmitting\n    }\n  } = useForm();\n\n  const onSubmit = async data => {\n    try {\n      const {\n        username,\n        password\n      } = data;\n      auth.login(username, password);\n      console.log(data);\n      window.location = \"/\"; //state ? state.from.pathname : \"/\";\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        setError(\"root\", {\n          message: ex.response.data\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"User Name \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"username\", {\n            required: \"User Name is required\"\n          }),\n          type: \"text\",\n          name: \"username\",\n          className: \"form-control\",\n          id: \"useranme\",\n          \"aria-describedby\": \"usernameHelp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), errors.username && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: [\" \", errors.username.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"password\", {\n            required: \"Password is required\",\n            minLength: {\n              value: 6,\n              message: \"Password must be 6 chars\"\n            }\n          }),\n          id: \"password\",\n          name: \"password\",\n          type: \"password\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), errors.password && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: [\" \", errors.password.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: isSubmitting,\n        className: \"btn btn-primary\",\n        children: isSubmitting ? \"Loading\" : \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), errors.root && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: [\" \", errors.root.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"j9OYUMJIgJNsExqx4adbM1uCjqU=\", false, function () {\n  return [useForm];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/aaryankapoor/Downloads/FRONTENDFINAL/OpenLab/Frontend/src/components/loginForm.jsx"],"names":["React","useForm","auth","LoginForm","register","handleSubmit","setError","formState","errors","isSubmitting","onSubmit","data","username","password","login","console","log","window","location","ex","response","status","message","required","minLength","value","root"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport auth from \"../services/authService\";\r\nconst LoginForm = () => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setError,\r\n    formState: { errors, isSubmitting },\r\n  } = useForm();\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      const { username, password } = data;\r\n      auth.login(username, password);\r\n      console.log(data);\r\n      window.location = \"/\"; //state ? state.from.pathname : \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        setError(\"root\", { message: ex.response.data });\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"username\">User Name </label>\r\n          <input\r\n            {...register(\"username\", {\r\n              required: \"User Name is required\",\r\n            })}\r\n            type=\"text\"\r\n            name=\"username\"\r\n            className=\"form-control\"\r\n            id=\"useranme\"\r\n            aria-describedby=\"usernameHelp\"\r\n          />\r\n        </div>\r\n        {errors.username && (\r\n          <div className=\"alert alert-danger\"> {errors.username.message}</div>\r\n        )}\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            {...register(\"password\", {\r\n              required: \"Password is required\",\r\n              minLength: {\r\n                value: 6,\r\n                message: \"Password must be 6 chars\",\r\n              },\r\n            })}\r\n            id=\"password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n        {errors.password && (\r\n          <div className=\"alert alert-danger\"> {errors.password.message}</div>\r\n        )}\r\n        <button disabled={isSubmitting} className=\"btn btn-primary\">\r\n          {isSubmitting ? \"Loading\" : \"Login\"}\r\n        </button>\r\n        {errors.root && (\r\n          <div className=\"alert alert-danger\"> {errors.root.message}</div>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}