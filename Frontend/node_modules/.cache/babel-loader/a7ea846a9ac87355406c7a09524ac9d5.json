{"ast":null,"code":"var _jsxFileName = \"/Users/aaryankapoor/Downloads/FRONTENDFINAL/OpenLab/Frontend/src/components/registerForm.jsx\";\nimport React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"../common/form\";\nimport * as userService from \"../services/userService\";\nimport auth from \"../services/authService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RegisterForm extends Form {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data: {\n        username: \"\",\n        password: \"\",\n        firstname: \"\",\n        lastname: \"\"\n      },\n      errors: {}\n    };\n    this.schema = {\n      username: Joi.string().required().label(\"Username\"),\n      password: Joi.string().required().min(5).label(\"Password\"),\n      firstname: Joi.string().required().label(\"Firstname\"),\n      lastname: Joi.string().required().label(\"Lastname\")\n    };\n\n    this.doSubmit = async () => {\n      try {\n        const response = await userService.register(this.state.data);\n        auth.loginWithJwt(response.headers[\"x-access-token\"]);\n        window.location = \"/\";\n      } catch (ex) {\n        if (ex.response && ex.response.status === 400) {\n          const errors = { ...this.state.errors\n          };\n          errors.username = ex.response.data;\n          this.setState({\n            errors\n          });\n        }\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [this.renderInput(\"username\", \"Username\"), this.renderInput(\"password\", \"Password\", \"password\"), this.renderInput(\"firstname\", \"Firstname\"), this.renderInput(\"lastname\", \"Lastname\"), this.renderButton(\"Register\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default RegisterForm;","map":{"version":3,"sources":["/Users/aaryankapoor/Downloads/FRONTENDFINAL/OpenLab/Frontend/src/components/registerForm.jsx"],"names":["React","Joi","Form","userService","auth","RegisterForm","state","data","username","password","firstname","lastname","errors","schema","string","required","label","min","doSubmit","response","register","loginWithJwt","headers","window","location","ex","status","setState","render","handleSubmit","renderInput","renderButton"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAO,KAAKC,WAAZ,MAA6B,yBAA7B;AACA,OAAOC,IAAP,MAAiB,yBAAjB;;;AAEA,MAAMC,YAAN,SAA2BH,IAA3B,CAAgC;AAAA;AAAA;AAAA,SAC9BI,KAD8B,GACtB;AACNC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,QAAQ,EAAE,EAA1B;AAA8BC,QAAAA,SAAS,EAAE,EAAzC;AAA6CC,QAAAA,QAAQ,EAAE;AAAvD,OADA;AAENC,MAAAA,MAAM,EAAE;AAFF,KADsB;AAAA,SAM9BC,MAN8B,GAMrB;AACPL,MAAAA,QAAQ,EAAEP,GAAG,CAACa,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,UAA9B,CADH;AAEPP,MAAAA,QAAQ,EAAER,GAAG,CAACa,MAAJ,GAAaC,QAAb,GAAwBE,GAAxB,CAA4B,CAA5B,EAA+BD,KAA/B,CAAqC,UAArC,CAFH;AAGPN,MAAAA,SAAS,EAAET,GAAG,CAACa,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,WAA9B,CAHJ;AAIPL,MAAAA,QAAQ,EAAEV,GAAG,CAACa,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,UAA9B;AAJH,KANqB;;AAAA,SAa9BE,QAb8B,GAanB,YAAY;AACrB,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMhB,WAAW,CAACiB,QAAZ,CAAqB,KAAKd,KAAL,CAAWC,IAAhC,CAAvB;AACAH,QAAAA,IAAI,CAACiB,YAAL,CAAkBF,QAAQ,CAACG,OAAT,CAAiB,gBAAjB,CAAlB;AACAC,QAAAA,MAAM,CAACC,QAAP,GAAkB,GAAlB;AACD,OAJD,CAIE,OAAOC,EAAP,EAAW;AACX,YAAIA,EAAE,CAACN,QAAH,IAAeM,EAAE,CAACN,QAAH,CAAYO,MAAZ,KAAuB,GAA1C,EAA+C;AAC7C,gBAAMd,MAAM,GAAG,EAAE,GAAG,KAAKN,KAAL,CAAWM;AAAhB,WAAf;AACAA,UAAAA,MAAM,CAACJ,QAAP,GAAkBiB,EAAE,CAACN,QAAH,CAAYZ,IAA9B;AACA,eAAKoB,QAAL,CAAc;AAAEf,YAAAA;AAAF,WAAd;AACD;AACF;AACF,KAzB6B;AAAA;;AA2B9BgB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,QAAQ,EAAE,KAAKC,YAArB;AAAA,mBACG,KAAKC,WAAL,CAAiB,UAAjB,EAA6B,UAA7B,CADH,EAEG,KAAKA,WAAL,CAAiB,UAAjB,EAA6B,UAA7B,EAAyC,UAAzC,CAFH,EAGG,KAAKA,WAAL,CAAiB,WAAjB,EAA8B,WAA9B,CAHH,EAIG,KAAKA,WAAL,CAAiB,UAAjB,EAA6B,UAA7B,CAJH,EAKG,KAAKC,YAAL,CAAkB,UAAlB,CALH;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AAxC6B;;AA2ChC,eAAe1B,YAAf","sourcesContent":["import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"../common/form\";\nimport * as userService from \"../services/userService\";\nimport auth from \"../services/authService\";\n\nclass RegisterForm extends Form {\n  state = {\n    data: { username: \"\", password: \"\", firstname: \"\", lastname: \"\" },\n    errors: {},\n  };\n\n  schema = {\n    username: Joi.string().required().label(\"Username\"),\n    password: Joi.string().required().min(5).label(\"Password\"),\n    firstname: Joi.string().required().label(\"Firstname\"),\n    lastname: Joi.string().required().label(\"Lastname\"),\n  };\n\n  doSubmit = async () => {\n    try {\n      const response = await userService.register(this.state.data);\n      auth.loginWithJwt(response.headers[\"x-access-token\"]);\n      window.location = \"/\";\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.username = ex.response.data;\n        this.setState({ errors });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Register</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"username\", \"Username\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderInput(\"firstname\", \"Firstname\")}\n          {this.renderInput(\"lastname\", \"Lastname\")}\n          {this.renderButton(\"Register\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}